{"ast":null,"code":"/**\n * Gauge metric\n */\n'use strict';\n\nconst util = require('util');\nconst {\n  setValue,\n  setValueDelta,\n  getLabels,\n  hashObject,\n  isObject,\n  removeLabels\n} = require('./util');\nconst {\n  validateLabel\n} = require('./validation');\nconst {\n  Metric\n} = require('./metric');\nclass Gauge extends Metric {\n  constructor(config) {\n    super(config);\n    this.type = 'gauge';\n  }\n\n  /**\n   * Set a gauge to a value\n   * @param {object} labels - Object with labels and their values\n   * @param {Number} value - Value to set the gauge to, must be positive\n   * @returns {void}\n   */\n  set(labels, value) {\n    value = getValueArg(labels, value);\n    labels = getLabelArg(labels);\n    set(this, labels, value);\n  }\n\n  /**\n   * Reset gauge\n   * @returns {void}\n   */\n  reset() {\n    this.hashMap = {};\n    if (this.labelNames.length === 0) {\n      setValue(this.hashMap, 0, {});\n    }\n  }\n\n  /**\n   * Increment a gauge value\n   * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n   * @param {Number} value - Value to increment - if omitted, increment with 1\n   * @returns {void}\n   */\n  inc(labels, value) {\n    value = getValueArg(labels, value);\n    labels = getLabelArg(labels);\n    if (value === undefined) value = 1;\n    setDelta(this, labels, value);\n  }\n\n  /**\n   * Decrement a gauge value\n   * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n   * @param {Number} value - Value to decrement - if omitted, decrement with 1\n   * @returns {void}\n   */\n  dec(labels, value) {\n    value = getValueArg(labels, value);\n    labels = getLabelArg(labels);\n    if (value === undefined) value = 1;\n    setDelta(this, labels, -value);\n  }\n\n  /**\n   * Set the gauge to current unix epoch\n   * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n   * @returns {void}\n   */\n  setToCurrentTime(labels) {\n    const now = Date.now() / 1000;\n    if (labels === undefined) {\n      this.set(now);\n    } else {\n      this.set(labels, now);\n    }\n  }\n\n  /**\n   * Start a timer\n   * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n   * @returns {function} - Invoke this function to set the duration in seconds since you started the timer.\n   * @example\n   * var done = gauge.startTimer();\n   * makeXHRRequest(function(err, response) {\n   *\tdone(); //Duration of the request will be saved\n   * });\n   */\n  startTimer(labels) {\n    const start = process.hrtime();\n    return endLabels => {\n      const delta = process.hrtime(start);\n      const value = delta[0] + delta[1] / 1e9;\n      this.set(Object.assign({}, labels, endLabels), value);\n      return value;\n    };\n  }\n  async get() {\n    if (this.collect) {\n      const v = this.collect();\n      if (v instanceof Promise) await v;\n    }\n    return {\n      help: this.help,\n      name: this.name,\n      type: this.type,\n      values: Object.values(this.hashMap),\n      aggregator: this.aggregator\n    };\n  }\n  _getValue(labels) {\n    const hash = hashObject(labels || {}, this.sortedLabelNames);\n    return this.hashMap[hash] ? this.hashMap[hash].value : 0;\n  }\n  labels() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const labels = getLabels(this.labelNames, args);\n    validateLabel(this.labelNames, labels);\n    return {\n      inc: this.inc.bind(this, labels),\n      dec: this.dec.bind(this, labels),\n      set: this.set.bind(this, labels),\n      setToCurrentTime: this.setToCurrentTime.bind(this, labels),\n      startTimer: this.startTimer.bind(this, labels)\n    };\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const labels = getLabels(this.labelNames, args);\n    validateLabel(this.labelNames, labels);\n    removeLabels.call(this, this.hashMap, labels, this.sortedLabelNames);\n  }\n}\nfunction set(gauge, labels, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`Value is not a valid number: ${util.format(value)}`);\n  }\n  validateLabel(gauge.labelNames, labels);\n  setValue(gauge.hashMap, value, labels);\n}\nfunction setDelta(gauge, labels, delta) {\n  if (typeof delta !== 'number') {\n    throw new TypeError(`Delta is not a valid number: ${util.format(delta)}`);\n  }\n  validateLabel(gauge.labelNames, labels);\n  const hash = hashObject(labels, gauge.sortedLabelNames);\n  setValueDelta(gauge.hashMap, delta, labels, hash);\n}\nfunction getLabelArg(labels) {\n  return isObject(labels) ? labels : {};\n}\nfunction getValueArg(labels, value) {\n  return isObject(labels) ? value : labels;\n}\nmodule.exports = Gauge;","map":{"version":3,"names":["util","require","setValue","setValueDelta","getLabels","hashObject","isObject","removeLabels","validateLabel","Metric","Gauge","constructor","config","type","set","labels","value","getValueArg","getLabelArg","reset","hashMap","labelNames","length","inc","undefined","setDelta","dec","setToCurrentTime","now","Date","startTimer","start","process","hrtime","endLabels","delta","Object","assign","get","collect","v","Promise","help","name","values","aggregator","_getValue","hash","sortedLabelNames","_len","arguments","args","Array","_key","bind","remove","_len2","_key2","call","gauge","TypeError","format","module","exports"],"sources":["/home/ashish/my-react-app/node_modules/prom-client/lib/gauge.js"],"sourcesContent":["/**\n * Gauge metric\n */\n'use strict';\n\nconst util = require('util');\n\nconst {\n\tsetValue,\n\tsetValueDelta,\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tremoveLabels,\n} = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\n\nclass Gauge extends Metric {\n\tconstructor(config) {\n\t\tsuper(config);\n\t\tthis.type = 'gauge';\n\t}\n\n\t/**\n\t * Set a gauge to a value\n\t * @param {object} labels - Object with labels and their values\n\t * @param {Number} value - Value to set the gauge to, must be positive\n\t * @returns {void}\n\t */\n\tset(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tset(this, labels, value);\n\t}\n\n\t/**\n\t * Reset gauge\n\t * @returns {void}\n\t */\n\treset() {\n\t\tthis.hashMap = {};\n\t\tif (this.labelNames.length === 0) {\n\t\t\tsetValue(this.hashMap, 0, {});\n\t\t}\n\t}\n\n\t/**\n\t * Increment a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to increment - if omitted, increment with 1\n\t * @returns {void}\n\t */\n\tinc(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tsetDelta(this, labels, value);\n\t}\n\n\t/**\n\t * Decrement a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to decrement - if omitted, decrement with 1\n\t * @returns {void}\n\t */\n\tdec(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tsetDelta(this, labels, -value);\n\t}\n\n\t/**\n\t * Set the gauge to current unix epoch\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tsetToCurrentTime(labels) {\n\t\tconst now = Date.now() / 1000;\n\t\tif (labels === undefined) {\n\t\t\tthis.set(now);\n\t\t} else {\n\t\t\tthis.set(labels, now);\n\t\t}\n\t}\n\n\t/**\n\t * Start a timer\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Invoke this function to set the duration in seconds since you started the timer.\n\t * @example\n\t * var done = gauge.startTimer();\n\t * makeXHRRequest(function(err, response) {\n\t *\tdone(); //Duration of the request will be saved\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.set(Object.assign({}, labels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype: this.type,\n\t\t\tvalues: Object.values(this.hashMap),\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\t_getValue(labels) {\n\t\tconst hash = hashObject(labels || {}, this.sortedLabelNames);\n\t\treturn this.hashMap[hash] ? this.hashMap[hash].value : 0;\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tinc: this.inc.bind(this, labels),\n\t\t\tdec: this.dec.bind(this, labels),\n\t\t\tset: this.set.bind(this, labels),\n\t\t\tsetToCurrentTime: this.setToCurrentTime.bind(this, labels),\n\t\t\tstartTimer: this.startTimer.bind(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels, this.sortedLabelNames);\n\t}\n}\n\nfunction set(gauge, labels, value) {\n\tif (typeof value !== 'number') {\n\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t}\n\n\tvalidateLabel(gauge.labelNames, labels);\n\tsetValue(gauge.hashMap, value, labels);\n}\n\nfunction setDelta(gauge, labels, delta) {\n\tif (typeof delta !== 'number') {\n\t\tthrow new TypeError(`Delta is not a valid number: ${util.format(delta)}`);\n\t}\n\n\tvalidateLabel(gauge.labelNames, labels);\n\tconst hash = hashObject(labels, gauge.sortedLabelNames);\n\tsetValueDelta(gauge.hashMap, delta, labels, hash);\n}\n\nfunction getLabelArg(labels) {\n\treturn isObject(labels) ? labels : {};\n}\n\nfunction getValueArg(labels, value) {\n\treturn isObject(labels) ? value : labels;\n}\n\nmodule.exports = Gauge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}