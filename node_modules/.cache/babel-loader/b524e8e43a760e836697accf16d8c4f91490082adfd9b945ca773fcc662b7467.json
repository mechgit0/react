{"ast":null,"code":"// Synchronously inject a require hook for webpack and webpack/. It's required to use the internal ncc webpack version.\n// This is needed for userland plugins to attach to the same webpack instance as Next.js'.\n// Individually compiled modules are as defined for the compilation in bundles/webpack/packages/*.\n// This module will only be loaded once per process.\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  addHookAliases: null,\n  defaultOverrides: null,\n  hookPropertyMap: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  addHookAliases: function () {\n    return addHookAliases;\n  },\n  defaultOverrides: function () {\n    return defaultOverrides;\n  },\n  hookPropertyMap: function () {\n    return hookPropertyMap;\n  }\n});\nconst path = require('path');\nconst mod = require('module');\nconst originalRequire = mod.prototype.require;\nconst resolveFilename = mod._resolveFilename;\nlet resolve = process.env.NEXT_MINIMAL ? __non_webpack_require__.resolve : require.resolve;\nconst hookPropertyMap = new Map();\nconst defaultOverrides = {\n  'styled-jsx': path.dirname(resolve('styled-jsx/package.json')),\n  'styled-jsx/style': resolve('styled-jsx/style'),\n  'styled-jsx/style.js': resolve('styled-jsx/style')\n};\nconst toResolveMap = map => Object.entries(map).map(_ref => {\n  let [key, value] = _ref;\n  return [key, resolve(value)];\n});\nfunction addHookAliases() {\n  let aliases = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  for (const [key, value] of aliases) {\n    hookPropertyMap.set(key, value);\n  }\n}\naddHookAliases(toResolveMap(defaultOverrides));\nmod._resolveFilename = function (originalResolveFilename, requestMap, request, parent, isMain, options) {\n  const hookResolved = requestMap.get(request);\n  if (hookResolved) request = hookResolved;\n  return originalResolveFilename.call(mod, request, parent, isMain, options);\n  // We use `bind` here to avoid referencing outside variables to create potential memory leaks.\n}.bind(null, resolveFilename, hookPropertyMap);\n// This is a hack to make sure that if a user requires a Next.js module that wasn't bundled\n// that needs to point to the rendering runtime version, it will point to the correct one.\n// This can happen on `pages` when a user requires a dependency that uses next/image for example.\nmod.prototype.require = function (request) {\n  if (request.endsWith('.shared-runtime')) {\n    return originalRequire.call(this, `next/dist/server/route-modules/pages/vendored/contexts/${path.basename(request, '.shared-runtime')}`);\n  }\n  return originalRequire.call(this, request);\n};","map":{"version":3,"names":["addHookAliases","defaultOverrides","hookPropertyMap","path","require","mod","originalRequire","prototype","resolveFilename","_resolveFilename","resolve","process","env","NEXT_MINIMAL","__non_webpack_require__","Map","dirname","toResolveMap","map","Object","entries","_ref","key","value","aliases","arguments","length","undefined","set","originalResolveFilename","requestMap","request","parent","isMain","options","hookResolved","get","call","bind","endsWith","basename"],"sources":["/home/ashish/my-react-app/node_modules/next/src/server/require-hook.ts"],"sourcesContent":["// Synchronously inject a require hook for webpack and webpack/. It's required to use the internal ncc webpack version.\n// This is needed for userland plugins to attach to the same webpack instance as Next.js'.\n// Individually compiled modules are as defined for the compilation in bundles/webpack/packages/*.\n\n// This module will only be loaded once per process.\nconst path = require('path')\nconst mod = require('module')\nconst originalRequire = mod.prototype.require\nconst resolveFilename = mod._resolveFilename\n\nlet resolve: typeof require.resolve = process.env.NEXT_MINIMAL\n  ? // @ts-ignore\n    __non_webpack_require__.resolve\n  : require.resolve\n\nexport const hookPropertyMap = new Map()\n\nexport const defaultOverrides = {\n  'styled-jsx': path.dirname(resolve('styled-jsx/package.json')),\n  'styled-jsx/style': resolve('styled-jsx/style'),\n  'styled-jsx/style.js': resolve('styled-jsx/style'),\n}\n\nconst toResolveMap = (map: Record<string, string>): [string, string][] =>\n  Object.entries(map).map(([key, value]) => [key, resolve(value)])\n\nexport function addHookAliases(aliases: [string, string][] = []) {\n  for (const [key, value] of aliases) {\n    hookPropertyMap.set(key, value)\n  }\n}\n\naddHookAliases(toResolveMap(defaultOverrides))\n\nmod._resolveFilename = function (\n  originalResolveFilename: (\n    request: string,\n    parent: string,\n    isMain: boolean,\n    opts: any\n  ) => string,\n  requestMap: Map<string, string>,\n  request: string,\n  parent: string,\n  isMain: boolean,\n  options: any\n) {\n  const hookResolved = requestMap.get(request)\n  if (hookResolved) request = hookResolved\n\n  return originalResolveFilename.call(mod, request, parent, isMain, options)\n\n  // We use `bind` here to avoid referencing outside variables to create potential memory leaks.\n}.bind(null, resolveFilename, hookPropertyMap)\n\n// This is a hack to make sure that if a user requires a Next.js module that wasn't bundled\n// that needs to point to the rendering runtime version, it will point to the correct one.\n// This can happen on `pages` when a user requires a dependency that uses next/image for example.\nmod.prototype.require = function (request: string) {\n  if (request.endsWith('.shared-runtime')) {\n    return originalRequire.call(\n      this,\n      `next/dist/server/route-modules/pages/vendored/contexts/${path.basename(\n        request,\n        '.shared-runtime'\n      )}`\n    )\n  }\n\n  return originalRequire.call(this, request)\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;EAsBgBA,cAAc,WAAAA,CAAA;WAAdA,cAAA;;EATHC,gBAAgB,WAAAA,CAAA;WAAhBA,gBAAA;;EAFAC,eAAe,WAAAA,CAAA;WAAfA,eAAA;;;AAVb,MAAMC,IAAA,GAAOC,OAAA,CAAQ;AACrB,MAAMC,GAAA,GAAMD,OAAA,CAAQ;AACpB,MAAME,eAAA,GAAkBD,GAAA,CAAIE,SAAS,CAACH,OAAO;AAC7C,MAAMI,eAAA,GAAkBH,GAAA,CAAII,gBAAgB;AAE5C,IAAIC,OAAA,GAAkCC,OAAA,CAAQC,GAAG,CAACC,YAAY,GAE1DC,uBAAA,CAAwBJ,OAAO,GAC/BN,OAAA,CAAQM,OAAO;AAEZ,MAAMR,eAAA,GAAkB,IAAIa,GAAA;AAE5B,MAAMd,gBAAA,GAAmB;EAC9B,cAAcE,IAAA,CAAKa,OAAO,CAACN,OAAA,CAAQ;EACnC,oBAAoBA,OAAA,CAAQ;EAC5B,uBAAuBA,OAAA,CAAQ;AACjC;AAEA,MAAMO,YAAA,GAAgBC,GAAA,IACpBC,MAAA,CAAOC,OAAO,CAACF,GAAA,EAAKA,GAAG,CAACG,IAAA;EAAA,IAAC,CAACC,GAAA,EAAKC,KAAA,CAAM,GAAAF,IAAA;EAAA,OAAK,CAACC,GAAA,EAAKZ,OAAA,CAAQa,KAAA,EAAO;AAAA;AAE1D,SAASvB,eAAA,EAA+C;EAAA,IAAhCwB,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA8B,EAAE;EAC7D,KAAK,MAAM,CAACH,GAAA,EAAKC,KAAA,CAAM,IAAIC,OAAA,EAAS;IAClCtB,eAAA,CAAgB0B,GAAG,CAACN,GAAA,EAAKC,KAAA;EAC3B;AACF;AAEAvB,cAAA,CAAeiB,YAAA,CAAahB,gBAAA;AAE5BI,GAAA,CAAII,gBAAgB,GAAG,UACrBoB,uBAKW,EACXC,UAA+B,EAC/BC,OAAe,EACfC,MAAc,EACdC,MAAe,EACfC,OAAY;EAEZ,MAAMC,YAAA,GAAeL,UAAA,CAAWM,GAAG,CAACL,OAAA;EACpC,IAAII,YAAA,EAAcJ,OAAA,GAAUI,YAAA;EAE5B,OAAON,uBAAA,CAAwBQ,IAAI,CAAChC,GAAA,EAAK0B,OAAA,EAASC,MAAA,EAAQC,MAAA,EAAQC,OAAA;EAElE;AACF,EAAEI,IAAI,CAAC,MAAM9B,eAAA,EAAiBN,eAAA;AAE9B;AACA;AACA;AACAG,GAAA,CAAIE,SAAS,CAACH,OAAO,GAAG,UAAU2B,OAAe;EAC/C,IAAIA,OAAA,CAAQQ,QAAQ,CAAC,oBAAoB;IACvC,OAAOjC,eAAA,CAAgB+B,IAAI,CACzB,IAAI,EACJ,0DAA0DlC,IAAA,CAAKqC,QAAQ,CACrET,OAAA,EACA,oBACC;EAEP;EAEA,OAAOzB,eAAA,CAAgB+B,IAAI,CAAC,IAAI,EAAEN,OAAA;AACpC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}