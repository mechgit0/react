{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  bootstrap: null,\n  error: null,\n  event: null,\n  info: null,\n  prefixes: null,\n  ready: null,\n  trace: null,\n  wait: null,\n  warn: null,\n  warnOnce: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  bootstrap: function () {\n    return bootstrap;\n  },\n  error: function () {\n    return error;\n  },\n  event: function () {\n    return event;\n  },\n  info: function () {\n    return info;\n  },\n  prefixes: function () {\n    return prefixes;\n  },\n  ready: function () {\n    return ready;\n  },\n  trace: function () {\n    return trace;\n  },\n  wait: function () {\n    return wait;\n  },\n  warn: function () {\n    return warn;\n  },\n  warnOnce: function () {\n    return warnOnce;\n  }\n});\nconst _picocolors = require(\"../../lib/picocolors\");\nconst _lrucache = require(\"../../server/lib/lru-cache\");\nconst prefixes = {\n  wait: (0, _picocolors.white)((0, _picocolors.bold)('○')),\n  error: (0, _picocolors.red)((0, _picocolors.bold)('⨯')),\n  warn: (0, _picocolors.yellow)((0, _picocolors.bold)('⚠')),\n  ready: '▲',\n  info: (0, _picocolors.white)((0, _picocolors.bold)(' ')),\n  event: (0, _picocolors.green)((0, _picocolors.bold)('✓')),\n  trace: (0, _picocolors.magenta)((0, _picocolors.bold)('»'))\n};\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error'\n};\nfunction prefixedLog(prefixType) {\n  for (var _len = arguments.length, message = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    message[_key - 1] = arguments[_key];\n  }\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift();\n  }\n  const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n  const prefix = prefixes[prefixType];\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('');\n  } else {\n    // Ensure if there's ANSI escape codes it's concatenated into one string.\n    // Chrome DevTool can only handle color if it's in one string.\n    if (message.length === 1 && typeof message[0] === 'string') {\n      console[consoleMethod](' ' + prefix + ' ' + message[0]);\n    } else {\n      console[consoleMethod](' ' + prefix, ...message);\n    }\n  }\n}\nfunction bootstrap() {\n  for (var _len2 = arguments.length, message = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    message[_key2] = arguments[_key2];\n  }\n  // logging format: ' <prefix> <message>'\n  // e.g. ' ✓ Compiled successfully'\n  // Add spaces to align with the indent of other logs\n  console.log('   ' + message.join(' '));\n}\nfunction wait() {\n  for (var _len3 = arguments.length, message = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    message[_key3] = arguments[_key3];\n  }\n  prefixedLog('wait', ...message);\n}\nfunction error() {\n  for (var _len4 = arguments.length, message = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    message[_key4] = arguments[_key4];\n  }\n  prefixedLog('error', ...message);\n}\nfunction warn() {\n  for (var _len5 = arguments.length, message = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    message[_key5] = arguments[_key5];\n  }\n  prefixedLog('warn', ...message);\n}\nfunction ready() {\n  for (var _len6 = arguments.length, message = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    message[_key6] = arguments[_key6];\n  }\n  prefixedLog('ready', ...message);\n}\nfunction info() {\n  for (var _len7 = arguments.length, message = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    message[_key7] = arguments[_key7];\n  }\n  prefixedLog('info', ...message);\n}\nfunction event() {\n  for (var _len8 = arguments.length, message = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n    message[_key8] = arguments[_key8];\n  }\n  prefixedLog('event', ...message);\n}\nfunction trace() {\n  for (var _len9 = arguments.length, message = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    message[_key9] = arguments[_key9];\n  }\n  prefixedLog('trace', ...message);\n}\nconst warnOnceCache = new _lrucache.LRUCache(10000, value => value.length);\nfunction warnOnce() {\n  for (var _len10 = arguments.length, message = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    message[_key10] = arguments[_key10];\n  }\n  const key = message.join(' ');\n  if (!warnOnceCache.has(key)) {\n    warnOnceCache.set(key, key);\n    warn(...message);\n  }\n}","map":{"version":3,"names":["bootstrap","error","event","info","prefixes","ready","trace","wait","warn","warnOnce","_picocolors","white","bold","red","yellow","green","magenta","LOGGING_METHOD","log","prefixedLog","prefixType","_len","arguments","length","message","Array","_key","undefined","shift","consoleMethod","prefix","console","_len2","_key2","join","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","warnOnceCache","_lrucache","LRUCache","value","_len10","_key10","key","has","set"],"sources":["/home/ashish/my-react-app/node_modules/next/src/build/output/log.ts"],"sourcesContent":["import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors'\nimport { LRUCache } from '../../server/lib/lru-cache'\n\nexport const prefixes = {\n  wait: white(bold('○')),\n  error: red(bold('⨯')),\n  warn: yellow(bold('⚠')),\n  ready: '▲', // no color\n  info: white(bold(' ')),\n  event: green(bold('✓')),\n  trace: magenta(bold('»')),\n} as const\n\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nfunction prefixedLog(prefixType: keyof typeof prefixes, ...message: any[]) {\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift()\n  }\n\n  const consoleMethod: keyof typeof LOGGING_METHOD =\n    prefixType in LOGGING_METHOD\n      ? LOGGING_METHOD[prefixType as keyof typeof LOGGING_METHOD]\n      : 'log'\n\n  const prefix = prefixes[prefixType]\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('')\n  } else {\n    // Ensure if there's ANSI escape codes it's concatenated into one string.\n    // Chrome DevTool can only handle color if it's in one string.\n    if (message.length === 1 && typeof message[0] === 'string') {\n      console[consoleMethod](' ' + prefix + ' ' + message[0])\n    } else {\n      console[consoleMethod](' ' + prefix, ...message)\n    }\n  }\n}\n\nexport function bootstrap(...message: string[]) {\n  // logging format: ' <prefix> <message>'\n  // e.g. ' ✓ Compiled successfully'\n  // Add spaces to align with the indent of other logs\n  console.log('   ' + message.join(' '))\n}\n\nexport function wait(...message: any[]) {\n  prefixedLog('wait', ...message)\n}\n\nexport function error(...message: any[]) {\n  prefixedLog('error', ...message)\n}\n\nexport function warn(...message: any[]) {\n  prefixedLog('warn', ...message)\n}\n\nexport function ready(...message: any[]) {\n  prefixedLog('ready', ...message)\n}\n\nexport function info(...message: any[]) {\n  prefixedLog('info', ...message)\n}\n\nexport function event(...message: any[]) {\n  prefixedLog('event', ...message)\n}\n\nexport function trace(...message: any[]) {\n  prefixedLog('trace', ...message)\n}\n\nconst warnOnceCache = new LRUCache<string>(10_000, (value) => value.length)\nexport function warnOnce(...message: any[]) {\n  const key = message.join(' ')\n  if (!warnOnceCache.has(key)) {\n    warnOnceCache.set(key, key)\n    warn(...message)\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}